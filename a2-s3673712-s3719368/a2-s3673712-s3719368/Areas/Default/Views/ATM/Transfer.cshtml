@model Customer

@{
    ViewData["Title"] = "Transfer";
}

<h1>Transactions Details</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Transfer">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label for="TransactionType" class="control-label">Transaction Type: </label>
                <select id="TransactionType" name="TransactionType" class="form-control" onchange='disableItems()'>
                    <option value="D">Deposit</option>
                    <option value="W">Withdraw</option>
                    <option value="T">Transfer</option>
                </select>
                <label for="FromAccount" class="control-label">From Account: </label>
                <select id="FromAccount" name="FromAccount" class="form-control" data-val="true">
                    @foreach (var account in Model.Accounts)
                    {

                        <option value="@account.AccountNumber" data-val="true">@account.AccountType.ToString()</option>
                    }
                </select>
                <label for="ToAccount" class="control-label">To Account: </label>
                <select id="ToAccount" name="ToAccount" class="form-control" data-val="true" disabled>
                    @foreach (Account account in ViewBag.accountList)
                    {
                        <option value="@account.AccountNumber" data-val="true">@account.AccountNumber</option>
                    }
                </select>
                @Html.ValidationMessage("AccountSame", new { @class = "text-danger" })
                <label for="Amount" class="control-label">Amount</label>
                <input id="Amount" name="Amount" class="form-control" value="@ViewBag.Amount?.ToString("0.00")"
                       data-val="true" data-val-number="The field Amount must be a number."
                       data-val-required="The Amount field is required." />
                @Html.ValidationMessage("Amount", new { @class = "text-danger" })
                <label for="Comment" class="control-label">Comment</label>
                <input id="Comment" name="Comment" class="form-control" disabled />

            </div>
            <div class="form-group">
                <input type="submit" value="Transfer" class="btn btn-primary" />
                <a class="btn btn-primary" onclick="cancel()" style="color:white">Cancel Transfer</a>
            </div>
            @Html.ValidationMessage("WithDrawFailed", new { @class = "text-danger" })
            @Html.ValidationMessage("FromAccountNotExsit", new { @class = "text-danger" })
            @Html.ValidationMessage("ToAccountNotExsit", new { @class = "text-danger" })
        </form>
    </div>
</div>
<script>
    function cancel() {
        document.getElementById('Amount').value = '';
        document.getElementById('Comment').value = '';
    }
    function disableItems() {
        if (document.getElementById('TransactionType').value != 'T') {
            document.getElementById('ToAccount').disabled = true;
            document.getElementById('Comment').disabled = true;
        } else {
            document.getElementById('ToAccount').disabled = false;
            document.getElementById('Comment').disabled = false;
        }
    }
</script>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}
