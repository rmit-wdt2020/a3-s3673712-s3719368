@model Account

@{
    ViewData["Title"] = "Schedule Payment";
}

<h1>Schedule Payment</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="addPayment">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <a>Account Number: @Model.AccountNumber</a>
            </div>
            <div class="form-group">
                <label for="PayeeID" class="control-label">Payee</label>
                <select id="PayeeID" name="PayeeID" class="form-control" data-val="true">
                    @foreach (Payee Payee in ViewBag.Payees)
                    {

                        <option value="@Payee.PayeeID" data-val="true">@Payee.PayeeID.ToString() @Payee.PayeeName</option>
                    }
                </select>
            </div>
            <div class="form-group">
                <label for="Amount" class="control-label">Amount</label>
                <input id="Amount" name="Amount" type="number" class="form-control" value="@ViewBag.Amount?.ToString("0.00")"
                       data-val="true" data-val-number="The field Amount must be a number."
                       data-val-required="The Amount field is required." />
                @Html.ValidationMessage("Amount", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label for="ScheduleDate" class="control-label">Schedule Date(Local Time)</label>
                <input name="ScheduleDate" type="datetime-local" id="ScheduleDate" class="form-control"
                       data-val="true" data-val-required="The Amount field is required." />
                @Html.ValidationMessage("ScheduleDate", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label for="Period" class="control-label">Period</label>
                <select name="Period" id="Period" class="form-control">
                    <option value="@Period.Monthly">@Period.Monthly.ToString()</option>
                    <option value="@Period.Quarterly">@Period.Quarterly.ToString()</option>
                    <option value="@Period.Annually">@Period.Annually.ToString()</option>
                    <option value="@Period.Once_off">@Period.Once_off.ToString()</option>
                </select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
            @Html.ValidationMessage("AccountNotExsit", new { @class = "text-danger" })
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}